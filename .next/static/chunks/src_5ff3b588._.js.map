{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/components/wizard/WizardLayout.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, Stepper, Step, StepLabel } from '@mui/material';\n\nconst steps = [\n  'Upload Files',\n  'Review and Edit',\n  'Define Rules',\n  'Prioritize and Export',\n];\n\ninterface WizardLayoutProps {\n  activeStep: number;\n  children: React.ReactNode;\n}\n\nexport const WizardLayout: React.FC<WizardLayoutProps> = ({ activeStep, children }) => {\n  return (\n    <Box>\n      <Box sx={{ width: '100%', p: 2 }}>\n        <Stepper activeStep={activeStep} alternativeLabel sx={{ mb: 3 }}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <Box sx={{ mt: 4 }}>{children}</Box>\n      </Box>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;;;AAEA,MAAM,QAAQ;IACZ;IACA;IACA;IACA;CACD;AAOM,MAAM,eAA4C,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE;IAChF,qBACE,6LAAC,2LAAA,CAAA,MAAG;kBACF,cAAA,6LAAC,2LAAA,CAAA,MAAG;YAAC,IAAI;gBAAE,OAAO;gBAAQ,GAAG;YAAE;;8BAC7B,6LAAC,uMAAA,CAAA,UAAO;oBAAC,YAAY;oBAAY,gBAAgB;oBAAC,IAAI;wBAAE,IAAI;oBAAE;8BAC3D,MAAM,GAAG,CAAC,CAAC,sBACV,6LAAC,8LAAA,CAAA,OAAI;sCACH,cAAA,6LAAC,6MAAA,CAAA,YAAS;0CAAE;;;;;;2BADH;;;;;;;;;;8BAKf,6LAAC,2LAAA,CAAA,MAAG;oBAAC,IAAI;wBAAE,IAAI;oBAAE;8BAAI;;;;;;;;;;;;;;;;;AAI7B;KAfa","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/components/wizard/FileUploadStep.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\ninterface FileUploadStepProps {\n  onFilesLoaded: (files: FileList) => void;\n}\n\nexport const FileUploadStep: React.FC<FileUploadStepProps> = ({ onFilesLoaded }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" gap={2}>\n      <input\n        ref={inputRef}\n        type=\"file\"\n        accept=\".csv, .xlsx\"\n        multiple\n        style={{ display: 'none' }}\n        onChange={e => {\n          if (e.target.files) onFilesLoaded(e.target.files);\n        }}\n      />\n      <Button variant=\"contained\" onClick={() => inputRef.current?.click()}>\n        Upload CSV/XLSX Files\n      </Button>\n      <Box color=\"text.secondary\" fontSize={14}>\n        Accepts client, worker, and task files. Flexible headers.\n      </Box>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAMO,MAAM,iBAAgD,CAAC,EAAE,aAAa,EAAE;;IAC7E,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,qBACE,6LAAC,yJAAA,CAAA,UAAG;QAAC,SAAQ;QAAO,eAAc;QAAS,YAAW;QAAS,KAAK;;0BAClE,6LAAC;gBACC,KAAK;gBACL,MAAK;gBACL,QAAO;gBACP,QAAQ;gBACR,OAAO;oBAAE,SAAS;gBAAO;gBACzB,UAAU,CAAA;oBACR,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,CAAC,KAAK;gBAClD;;;;;;0BAEF,6LAAC,+JAAA,CAAA,UAAM;gBAAC,SAAQ;gBAAY,SAAS,IAAM,SAAS,OAAO,EAAE;0BAAS;;;;;;0BAGtE,6LAAC,yJAAA,CAAA,UAAG;gBAAC,OAAM;gBAAiB,UAAU;0BAAI;;;;;;;;;;;;AAKhD;GAvBa;KAAA","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/store/wizardStore.ts"],"sourcesContent":["import { create } from \"zustand\";\n\nexport type TableType = \"clients\" | \"workers\" | \"tasks\";\n\nexport type RowData = Record<\n  string,\n  string | number | boolean | null | undefined\n>;\n\nexport interface RawTableData {\n  type: TableType;\n  name: string;\n  data: RowData[];\n  columns: string[];\n}\n\ninterface WizardState {\n  step: number;\n  setStep: (step: number) => void;\n  tables: RawTableData[];\n  setTables: (tables: RawTableData[]) => void;\n}\n\nexport const useWizardStore = create<WizardState>((set) => ({\n  step: 0,\n  setStep: (step) => set({ step }),\n  tables: [],\n  setTables: (tables) => set({ tables }),\n}));\n"],"names":[],"mappings":";;;AAAA;;AAuBO,MAAM,iBAAiB,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAe,CAAC,MAAQ,CAAC;QAC1D,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAC9B,QAAQ,EAAE;QACV,WAAW,CAAC,SAAW,IAAI;gBAAE;YAAO;IACtC,CAAC","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/utils/parseFiles.ts"],"sourcesContent":["import Papa from \"papaparse\";\nimport * as XLSX from \"xlsx\";\nimport { RawTableData, TableType, RowData } from \"../store/wizardStore\";\n\nconst TABLE_KEYWORDS: Record<TableType, string[]> = {\n  clients: [\"client\", \"cliente\", \"clientes\"],\n  workers: [\"worker\", \"trabajador\", \"empleado\", \"workers\"],\n  tasks: [\"task\", \"tarea\", \"tasks\", \"tareas\"],\n};\n\nfunction guessTableType(filename: string): TableType | null {\n  const lower = filename.toLowerCase();\n  for (const [type, keywords] of Object.entries(TABLE_KEYWORDS)) {\n    if (keywords.some((kw) => lower.includes(kw))) return type as TableType;\n  }\n  return null;\n}\n\nexport async function parseFiles(files: FileList): Promise<RawTableData[]> {\n  const results: RawTableData[] = [];\n  for (const file of Array.from(files)) {\n    const ext = file.name.split(\".\").pop()?.toLowerCase();\n    let rows: RowData[] = [];\n    let columns: string[] = [];\n    if (ext === \"csv\") {\n      const text = await file.text();\n      const parsed = Papa.parse<RowData>(text, {\n        header: true,\n        skipEmptyLines: true,\n      });\n      rows = parsed.data as RowData[];\n      columns = parsed.meta.fields || [];\n    } else if (ext === \"xlsx\") {\n      const data = await file.arrayBuffer();\n      const workbook = XLSX.read(data);\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      rows = XLSX.utils.sheet_to_json<RowData>(sheet, { defval: \"\" });\n      columns = Object.keys(rows[0] || {});\n    }\n    const type = guessTableType(file.name) || \"tasks\";\n    results.push({ type, name: file.name, data: rows, columns });\n  }\n  return results;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGA,MAAM,iBAA8C;IAClD,SAAS;QAAC;QAAU;QAAW;KAAW;IAC1C,SAAS;QAAC;QAAU;QAAc;QAAY;KAAU;IACxD,OAAO;QAAC;QAAQ;QAAS;QAAS;KAAS;AAC7C;AAEA,SAAS,eAAe,QAAgB;IACtC,MAAM,QAAQ,SAAS,WAAW;IAClC,KAAK,MAAM,CAAC,MAAM,SAAS,IAAI,OAAO,OAAO,CAAC,gBAAiB;QAC7D,IAAI,SAAS,IAAI,CAAC,CAAC,KAAO,MAAM,QAAQ,CAAC,MAAM,OAAO;IACxD;IACA,OAAO;AACT;AAEO,eAAe,WAAW,KAAe;IAC9C,MAAM,UAA0B,EAAE;IAClC,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC,OAAQ;QACpC,MAAM,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI;QACxC,IAAI,OAAkB,EAAE;QACxB,IAAI,UAAoB,EAAE;QAC1B,IAAI,QAAQ,OAAO;YACjB,MAAM,OAAO,MAAM,KAAK,IAAI;YAC5B,MAAM,SAAS,gJAAA,CAAA,UAAI,CAAC,KAAK,CAAU,MAAM;gBACvC,QAAQ;gBACR,gBAAgB;YAClB;YACA,OAAO,OAAO,IAAI;YAClB,UAAU,OAAO,IAAI,CAAC,MAAM,IAAI,EAAE;QACpC,OAAO,IAAI,QAAQ,QAAQ;YACzB,MAAM,OAAO,MAAM,KAAK,WAAW;YACnC,MAAM,WAAW,CAAA,GAAA,gIAAA,CAAA,OAAS,AAAD,EAAE;YAC3B,MAAM,QAAQ,SAAS,MAAM,CAAC,SAAS,UAAU,CAAC,EAAE,CAAC;YACrD,OAAO,gIAAA,CAAA,QAAU,CAAC,aAAa,CAAU,OAAO;gBAAE,QAAQ;YAAG;YAC7D,UAAU,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;QACpC;QACA,MAAM,OAAO,eAAe,KAAK,IAAI,KAAK;QAC1C,QAAQ,IAAI,CAAC;YAAE;YAAM,MAAM,KAAK,IAAI;YAAE,MAAM;YAAM;QAAQ;IAC5D;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/components/wizard/ValidatorPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport interface ValidationError {\n  table: string;\n  row: number;\n  column: string;\n  message: string;\n  severity?: 'error' | 'warning';\n}\n\ninterface ValidatorPanelProps {\n  errors: ValidationError[];\n  onSelectError?: (error: ValidationError) => void;\n}\n\nexport const ValidatorPanel: React.FC<ValidatorPanelProps> = ({ errors, onSelectError }) => {\n  const [showInfo, setShowInfo] = useState(true);\n  if (!errors.length) return null;\n  return (\n    <Box sx={{ minWidth: 260, maxWidth: 340, bgcolor: 'background.paper', border: '1px solid #eee', borderRadius: 2, p: 2 }}>\n      {showInfo && (\n        <Alert\n          severity=\"info\"\n          sx={{ mb: 2 }}\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => setShowInfo(false)}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          <strong>Note:</strong> Warnings do not block progress. You can proceed to the next step even if warnings are present.\n        </Alert>\n      )}\n      <Typography variant=\"h6\" gutterBottom color=\"text.primary\" fontWeight={600}>\n        Validation Errors ({errors.length})\n      </Typography>\n      <List dense>\n        {errors.map((err, idx) => (\n          <ListItem key={idx} onClick={() => onSelectError?.(err)} style={onSelectError ? { cursor: 'pointer' } : {}}>\n            <ListItemText\n              primary={\n                <span style={{ color: err.severity === 'error' ? '#d32f2f' : '#ed6c02', fontWeight: 500 }}>\n                  [{err.table}] Row {err.row + 1}, Column &quot;{err.column}&quot;\n                </span>\n              }\n              secondary={\n                <span style={{ color: '#333', fontWeight: 500 }}>\n                  {err.message}\n                </span>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAeO,MAAM,iBAAgD,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE;;IACrF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,IAAI,CAAC,OAAO,MAAM,EAAE,OAAO;IAC3B,qBACE,6LAAC,yJAAA,CAAA,UAAG;QAAC,IAAI;YAAE,UAAU;YAAK,UAAU;YAAK,SAAS;YAAoB,QAAQ;YAAkB,cAAc;YAAG,GAAG;QAAE;;YACnH,0BACC,6LAAC,6JAAA,CAAA,UAAK;gBACJ,UAAS;gBACT,IAAI;oBAAE,IAAI;gBAAE;gBACZ,sBACE,6LAAC,uKAAA,CAAA,UAAU;oBACT,cAAW;oBACX,OAAM;oBACN,MAAK;oBACL,SAAS,IAAM,YAAY;8BAE3B,cAAA,6LAAC,6JAAA,CAAA,UAAS;wBAAC,UAAS;;;;;;;;;;;;kCAIxB,6LAAC;kCAAO;;;;;;oBAAc;;;;;;;0BAG1B,6LAAC,uKAAA,CAAA,UAAU;gBAAC,SAAQ;gBAAK,YAAY;gBAAC,OAAM;gBAAe,YAAY;;oBAAK;oBACtD,OAAO,MAAM;oBAAC;;;;;;;0BAEpC,6LAAC,2JAAA,CAAA,UAAI;gBAAC,KAAK;0BACR,OAAO,GAAG,CAAC,CAAC,KAAK,oBAChB,6LAAC,mKAAA,CAAA,UAAQ;wBAAW,SAAS,IAAM,gBAAgB;wBAAM,OAAO,gBAAgB;4BAAE,QAAQ;wBAAU,IAAI,CAAC;kCACvG,cAAA,6LAAC,2KAAA,CAAA,UAAY;4BACX,uBACE,6LAAC;gCAAK,OAAO;oCAAE,OAAO,IAAI,QAAQ,KAAK,UAAU,YAAY;oCAAW,YAAY;gCAAI;;oCAAG;oCACvF,IAAI,KAAK;oCAAC;oCAAO,IAAI,GAAG,GAAG;oCAAE;oCAAgB,IAAI,MAAM;oCAAC;;;;;;;4BAG9D,yBACE,6LAAC;gCAAK,OAAO;oCAAE,OAAO;oCAAQ,YAAY;gCAAI;0CAC3C,IAAI,OAAO;;;;;;;;;;;uBATL;;;;;;;;;;;;;;;;AAkBzB;GA9Ca;KAAA","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/utils/validateTables.ts"],"sourcesContent":["import { RawTableData } from '../store/wizardStore';\nimport { ValidationError } from '../components/wizard/ValidatorPanel';\n\n// Minimum rules: missing column, duplicate ID, out-of-range values, empty fields, incorrect type, etc.\n\nconst idColumns: Record<string, string> = {\n  clients: 'ClientID',\n  workers: 'WorkerID',\n  tasks: 'TaskID',\n};\n\nconst requiredFields: Record<string, string[]> = {\n  clients: ['ClientID', 'ClientName'],\n  workers: ['WorkerID', 'WorkerName'],\n  tasks: ['TaskID', 'TaskName'],\n};\n\nexport function validateTables(tables: RawTableData[]): ValidationError[] {\n  const errors: ValidationError[] = [];\n\n  // Build lookup sets for cross-entity validation\n  const workerSkills = new Set(\n    (tables.find(t => t.type === 'workers')?.data || [])\n      .flatMap(row => (typeof row['Skills'] === 'string' ? row['Skills'].split(',').map((s: string) => s.trim()) : []))\n  );\n\n  tables.forEach((table) => {\n    const idCol = idColumns[table.type] || 'id';\n    if (!table.data || table.data.length === 0) return;\n\n    // 1. Check for required ID column\n    const firstRow = table.data[0];\n    if (!firstRow || !(idCol in firstRow)) {\n      errors.push({\n        table: table.type,\n        row: 0,\n        column: idCol,\n        message: `Missing required column: ${idCol}. Please add this column to your data file.`,\n        severity: 'error'\n      });\n      return;\n    }\n    // 2. Duplicate IDs\n    const ids = new Set<string>();\n    table.data.forEach((row: Record<string, unknown>, i: number) => {\n      const id = row[idCol];\n      if (typeof id === 'string' || typeof id === 'number') {\n        const idStr = String(id);\n        if (ids.has(idStr)) {\n          errors.push({\n            table: table.type,\n            row: i,\n            column: idCol,\n            message: `Duplicate ${idCol}: ${idStr}. Each row must have a unique ID.`,\n            severity: 'error'\n          });\n        } else {\n          ids.add(idStr);\n        }\n      }\n    });\n    // 3. Check for empty required fields\n    const reqFields = requiredFields[table.type] || [];\n    reqFields.forEach(field => {\n      table.data.forEach((row: Record<string, unknown>, i: number) => {\n        const value = row[field];\n        if (value === null || value === undefined || value === '') {\n          errors.push({\n            table: table.type,\n            row: i,\n            column: field,\n            message: `Missing value for required field: ${field}. Please fill in this field.`,\n            severity: 'warning'\n          });\n        }\n      });\n    });\n    // 4. Advanced: Cross-entity and JSON validation\n    if (table.type === 'clients') {\n      // No per-row checks needed for clients at this stage\n    }\n    if (table.type === 'tasks') {\n      table.data.forEach((row: Record<string, unknown>, i: number) => {\n        // RequiredSkills must exist in workers' skills\n        if (row['RequiredSkills']) {\n          const skills = String(row['RequiredSkills']).split(',').map(s => s.trim());\n          skills.forEach(skill => {\n            if (skill && !workerSkills.has(skill)) {\n              errors.push({\n                table: table.type,\n                row: i,\n                column: 'RequiredSkills',\n                message: `Required skill '${skill}' is not covered by any worker. Please check your workers' skills.`,\n                severity: 'error'\n              });\n            }\n          });\n        }\n      });\n    }\n    // 5. Validate numeric fields\n    const numericFields = ['priority', 'duration', 'cost'];\n    numericFields.forEach(field => {\n      table.data.forEach((row: Record<string, unknown>, i: number) => {\n        const value = row[field];\n        if (value !== null && value !== undefined && value !== '') {\n          const numValue = Number(value);\n          if (isNaN(numValue) || numValue < 0) {\n            errors.push({\n              table: table.type,\n              row: i,\n              column: field,\n              message: `Invalid numeric value for ${field}: ${value}`,\n              severity: 'error'\n            });\n          }\n        }\n      });\n    });\n\n    // 6. Validate date fields\n    const dateFields = ['start_date', 'end_date', 'deadline'];\n    dateFields.forEach(field => {\n      table.data.forEach((row: Record<string, unknown>, i: number) => {\n        const value = row[field];\n        if (value !== null && value !== undefined && value !== '') {\n          const dateValue = new Date(String(value));\n          if (isNaN(dateValue.getTime())) {\n            errors.push({\n              table: table.type,\n              row: i,\n              column: field,\n              message: `Invalid date format for ${field}: ${value}`,\n              severity: 'error'\n            });\n          }\n        }\n      });\n    });\n\n    // 7. Check for reasonable string lengths\n    const stringFields = ['name', 'description', 'notes'];\n    stringFields.forEach(field => {\n      table.data.forEach((row: Record<string, unknown>, i: number) => {\n        const value = row[field];\n        if (typeof value === 'string' && value.length > 500) {\n          errors.push({\n            table: table.type,\n            row: i,\n            column: field,\n            message: `Text too long for ${field}: ${value.length} characters`,\n            severity: 'warning'\n          });\n        }\n      });\n    });\n  });\n\n  return errors;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/components/wizard/DataReviewStep.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { DataGrid, GridColDef, GridCellParams } from '@mui/x-data-grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useWizardStore } from '../../store/wizardStore';\nimport { ValidatorPanel, ValidationError } from './ValidatorPanel';\nimport { validateTables } from '../../utils/validateTables';\n\ninterface DataReviewStepProps {\n  onNext: () => void;\n}\n\nexport const DataReviewStep: React.FC<DataReviewStepProps> = ({ onNext }) => {\n  const tables = useWizardStore((s) => s.tables);\n  // The error panel allows selection, but it's not used yet\n  const [, setSelectedError] = useState<ValidationError | null>(null);\n\n  const errors = useMemo(() => validateTables(tables), [tables]);\n\n  if (!tables || tables.length === 0) {\n    return <Typography color=\"error\">No data loaded.</Typography>;\n  }\n\n  // Highlight cells with errors\n  const getCellClassName = (tableName: string, rowIdx: number, col: string) => {\n    return errors.some(e => e.table === tableName && e.row === rowIdx && e.column === col)\n      ? 'cell-error' : '';\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection={{ xs: 'column', md: 'row' }} gap={4}>\n      <Box flex={1} display=\"flex\" flexDirection=\"column\" gap={4}>\n        {tables.map((table) => {\n          const columns: GridColDef[] = table.columns.map((col) => ({\n            field: col,\n            headerName: col,\n            width: 150,\n            editable: true,\n            cellClassName: (params: GridCellParams) =>\n              getCellClassName(table.name, params.id as number, col),\n          }));\n          return (\n            <Box key={table.name}>\n              <Typography variant=\"h6\" gutterBottom>\n                {table.type.toUpperCase()} ({table.name})\n              </Typography>\n              <DataGrid\n                rows={table.data.map((row, i) => ({ id: i, ...row }))}\n                columns={columns}\n                autoHeight\n                initialState={{ pagination: { paginationModel: { pageSize: 5 } } }}\n                pageSizeOptions={[5, 10, 20]}\n                disableRowSelectionOnClick\n              />\n            </Box>\n          );\n        })}\n        <Button variant=\"contained\" color=\"primary\" onClick={onNext} sx={{ alignSelf: 'flex-end' }} disabled={errors.length > 0}>\n          Next: Define Rules\n        </Button>\n      </Box>\n      <ValidatorPanel errors={errors} onSelectError={setSelectedError} />\n      <style jsx global>{`\n        .cell-error {\n          background: #ffeaea !important;\n          color: #b71c1c !important;\n        }\n      `}</style>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAMO,MAAM,iBAAgD,CAAC,EAAE,MAAM,EAAE;;IACtE,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;iDAAE,CAAC,IAAM,EAAE,MAAM;;IAC7C,0DAA0D;IAC1D,MAAM,GAAG,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B;IAE9D,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0CAAE,IAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE;yCAAS;QAAC;KAAO;IAE7D,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG;QAClC,qBAAO,6LAAC,uKAAA,CAAA,UAAU;YAAC,OAAM;sBAAQ;;;;;;IACnC;IAEA,8BAA8B;IAC9B,MAAM,mBAAmB,CAAC,WAAmB,QAAgB;QAC3D,OAAO,OAAO,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,aAAa,EAAE,GAAG,KAAK,UAAU,EAAE,MAAM,KAAK,OAC9E,eAAe;IACrB;IAEA,qBACE,6LAAC,yJAAA,CAAA,UAAG;QAAC,SAAQ;QAAO,eAAe;YAAE,IAAI;YAAU,IAAI;QAAM;QAAG,KAAK;;0BACnE,6LAAC,yJAAA,CAAA,UAAG;gBAAC,MAAM;gBAAG,SAAQ;gBAAO,eAAc;gBAAS,KAAK;;oBACtD,OAAO,GAAG,CAAC,CAAC;wBACX,MAAM,UAAwB,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAC;gCACxD,OAAO;gCACP,YAAY;gCACZ,OAAO;gCACP,UAAU;gCACV,eAAe,CAAC,SACd,iBAAiB,MAAM,IAAI,EAAE,OAAO,EAAE,EAAY;4BACtD,CAAC;wBACD,qBACE,6LAAC,yJAAA,CAAA,UAAG;;8CACF,6LAAC,uKAAA,CAAA,UAAU;oCAAC,SAAQ;oCAAK,YAAY;;wCAClC,MAAM,IAAI,CAAC,WAAW;wCAAG;wCAAG,MAAM,IAAI;wCAAC;;;;;;;8CAE1C,6LAAC,4KAAA,CAAA,WAAQ;oCACP,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,IAAM,CAAC;4CAAE,IAAI;4CAAG,GAAG,GAAG;wCAAC,CAAC;oCACnD,SAAS;oCACT,UAAU;oCACV,cAAc;wCAAE,YAAY;4CAAE,iBAAiB;gDAAE,UAAU;4CAAE;wCAAE;oCAAE;oCACjE,iBAAiB;wCAAC;wCAAG;wCAAI;qCAAG;oCAC5B,0BAA0B;;;;;;;2BAVpB,MAAM,IAAI;;;;;oBAcxB;kCACA,6LAAC,+JAAA,CAAA,UAAM;wBAAC,SAAQ;wBAAY,OAAM;wBAAU,SAAS;wBAAQ,IAAI;4BAAE,WAAW;wBAAW;wBAAG,UAAU,OAAO,MAAM,GAAG;kCAAG;;;;;;;;;;;;0BAI3H,6LAAC,iJAAA,CAAA,iBAAc;gBAAC,QAAQ;gBAAQ,eAAe;;;;;;;;;;;;;;;;AASrD;GA1Da;;QACI,8HAAA,CAAA,iBAAc;;;KADlB","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/components/wizard/RuleBuilderStep.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst RULE_TYPES = [\n  { type: 'co-run', label: 'Co-run (tasks that must go together)' },\n  { type: 'load-limit', label: 'Load Limit' },\n  { type: 'phase-window', label: 'Phase Window' },\n];\n\nexport interface Rule {\n  type: string;\n  params: Record<string, string | number | boolean>;\n}\n\ninterface RuleBuilderStepProps {\n  onNext: () => void;\n}\n\nexport const RuleBuilderStep: React.FC<RuleBuilderStepProps> = ({ onNext }) => {\n  const [rules, setRules] = useState<Rule[]>([]);\n  const [selectedType, setSelectedType] = useState<string>('co-run');\n  const [param, setParam] = useState('');\n\n  const addRule = () => {\n    if (!param) return;\n    setRules([...rules, { type: selectedType, params: { value: param } }]);\n    setParam('');\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={3}>\n      <Typography variant=\"h6\">Define Business Rules</Typography>\n      <Box display=\"flex\" gap={2} alignItems=\"center\">\n        <select value={selectedType} onChange={e => setSelectedType(e.target.value)}>\n          {RULE_TYPES.map(rule => (\n            <option key={rule.type} value={rule.type}>{rule.label}</option>\n          ))}\n        </select>\n        <TextField\n          size=\"small\"\n          label=\"Parameter (e.g., T12,T14)\"\n          value={param}\n          onChange={e => setParam(e.target.value)}\n        />\n        <Button variant=\"outlined\" onClick={addRule}>Add Rule</Button>\n      </Box>\n      <Box mt={3}>\n        <Typography variant=\"subtitle2\">Current Rules:</Typography>\n        <pre style={{ background: '#f7f7f7', padding: 8, borderRadius: 4 }}>{JSON.stringify(rules, null, 2)}</pre>\n      </Box>\n      <Button variant=\"contained\" color=\"primary\" onClick={onNext} sx={{ alignSelf: 'flex-end' }}>\n        Next: Prioritize and Export\n      </Button>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,aAAa;IACjB;QAAE,MAAM;QAAU,OAAO;IAAuC;IAChE;QAAE,MAAM;QAAc,OAAO;IAAa;IAC1C;QAAE,MAAM;QAAgB,OAAO;IAAe;CAC/C;AAWM,MAAM,kBAAkD,CAAC,EAAE,MAAM,EAAE;;IACxE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,UAAU;QACd,IAAI,CAAC,OAAO;QACZ,SAAS;eAAI;YAAO;gBAAE,MAAM;gBAAc,QAAQ;oBAAE,OAAO;gBAAM;YAAE;SAAE;QACrE,SAAS;IACX;IAEA,qBACE,6LAAC,yJAAA,CAAA,UAAG;QAAC,SAAQ;QAAO,eAAc;QAAS,KAAK;;0BAC9C,6LAAC,uKAAA,CAAA,UAAU;gBAAC,SAAQ;0BAAK;;;;;;0BACzB,6LAAC,yJAAA,CAAA,UAAG;gBAAC,SAAQ;gBAAO,KAAK;gBAAG,YAAW;;kCACrC,6LAAC;wBAAO,OAAO;wBAAc,UAAU,CAAA,IAAK,gBAAgB,EAAE,MAAM,CAAC,KAAK;kCACvE,WAAW,GAAG,CAAC,CAAA,qBACd,6LAAC;gCAAuB,OAAO,KAAK,IAAI;0CAAG,KAAK,KAAK;+BAAxC,KAAK,IAAI;;;;;;;;;;kCAG1B,6LAAC,qKAAA,CAAA,UAAS;wBACR,MAAK;wBACL,OAAM;wBACN,OAAO;wBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;kCAExC,6LAAC,+JAAA,CAAA,UAAM;wBAAC,SAAQ;wBAAW,SAAS;kCAAS;;;;;;;;;;;;0BAE/C,6LAAC,yJAAA,CAAA,UAAG;gBAAC,IAAI;;kCACP,6LAAC,uKAAA,CAAA,UAAU;wBAAC,SAAQ;kCAAY;;;;;;kCAChC,6LAAC;wBAAI,OAAO;4BAAE,YAAY;4BAAW,SAAS;4BAAG,cAAc;wBAAE;kCAAI,KAAK,SAAS,CAAC,OAAO,MAAM;;;;;;;;;;;;0BAEnG,6LAAC,+JAAA,CAAA,UAAM;gBAAC,SAAQ;gBAAY,OAAM;gBAAU,SAAS;gBAAQ,IAAI;oBAAE,WAAW;gBAAW;0BAAG;;;;;;;;;;;;AAKlG;GArCa;KAAA","debugId":null}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/components/wizard/PrioritizationStep.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWizardStore } from '../../store/wizardStore';\nimport * as XLSX from 'xlsx';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\n\ninterface CriteriaWeight {\n  label: string;\n  key: string;\n  value: number;\n}\n\nconst CRITERIA: CriteriaWeight[] = [\n  { label: 'Cost', key: 'cost', value: 50 },\n  { label: 'Workload', key: 'workload', value: 50 },\n  { label: 'Preference', key: 'preference', value: 50 },\n  { label: 'Phase Balance', key: 'phaseBalance', value: 50 },\n];\n\n\ninterface PrioritizationStepProps {\n  onExport: () => void;\n}\n\n\nexport const PrioritizationStep: React.FC<PrioritizationStepProps> = ({ onExport }) => {\n  const [criteria, setCriteria] = useState(CRITERIA);\n  const tables = useWizardStore((s) => s.tables);\n\n  const handleChange = (idx: number, value: number) => {\n    setCriteria((prev) => prev.map((c, i) => i === idx ? { ...c, value } : c));\n  };\n\n  // Export clean data and rules.json\n  const handleExport = () => {\n    // Export data to XLSX\n    tables.forEach((table) => {\n      const ws = XLSX.utils.json_to_sheet(table.data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, table.type);\n      XLSX.writeFile(wb, `${table.type}.xlsx`);\n    });\n    // Export rules and criteria to rules.json\n    const rules = { criteria, /* real rules can be added here */ };\n    const blob = new Blob([JSON.stringify(rules, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'rules.json';\n    a.click();\n    URL.revokeObjectURL(url);\n    if (onExport) onExport();\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={3}>\n      <Typography variant=\"h6\">Prioritize criteria and export</Typography>\n      {criteria.map((c, idx) => (\n        <Box key={c.key}>\n          <Typography gutterBottom>{c.label}</Typography>\n          <Slider\n            value={c.value}\n            min={0}\n            max={100}\n            step={1}\n            onChange={(_, v) => handleChange(idx, v as number)}\n            valueLabelDisplay=\"auto\"\n          />\n        </Box>\n      ))}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleExport} sx={{ alignSelf: 'flex-end' }}>\n        Export Clean Data and rules.json\n      </Button>\n    </Box>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAQA,MAAM,WAA6B;IACjC;QAAE,OAAO;QAAQ,KAAK;QAAQ,OAAO;IAAG;IACxC;QAAE,OAAO;QAAY,KAAK;QAAY,OAAO;IAAG;IAChD;QAAE,OAAO;QAAc,KAAK;QAAc,OAAO;IAAG;IACpD;QAAE,OAAO;QAAiB,KAAK;QAAgB,OAAO;IAAG;CAC1D;AAQM,MAAM,qBAAwD,CAAC,EAAE,QAAQ,EAAE;;IAChF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;qDAAE,CAAC,IAAM,EAAE,MAAM;;IAE7C,MAAM,eAAe,CAAC,KAAa;QACjC,YAAY,CAAC,OAAS,KAAK,GAAG,CAAC,CAAC,GAAG,IAAM,MAAM,MAAM;oBAAE,GAAG,CAAC;oBAAE;gBAAM,IAAI;IACzE;IAEA,mCAAmC;IACnC,MAAM,eAAe;QACnB,sBAAsB;QACtB,OAAO,OAAO,CAAC,CAAC;YACd,MAAM,KAAK,gIAAA,CAAA,QAAU,CAAC,aAAa,CAAC,MAAM,IAAI;YAC9C,MAAM,KAAK,gIAAA,CAAA,QAAU,CAAC,QAAQ;YAC9B,gIAAA,CAAA,QAAU,CAAC,iBAAiB,CAAC,IAAI,IAAI,MAAM,IAAI;YAC/C,CAAA,GAAA,gIAAA,CAAA,YAAc,AAAD,EAAE,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC;QACzC;QACA,0CAA0C;QAC1C,MAAM,QAAQ;YAAE;QAA6C;QAC7D,MAAM,OAAO,IAAI,KAAK;YAAC,KAAK,SAAS,CAAC,OAAO,MAAM;SAAG,EAAE;YAAE,MAAM;QAAmB;QACnF,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG;QACb,EAAE,KAAK;QACP,IAAI,eAAe,CAAC;QACpB,IAAI,UAAU;IAChB;IAEA,qBACE,6LAAC,yJAAA,CAAA,UAAG;QAAC,SAAQ;QAAO,eAAc;QAAS,KAAK;;0BAC9C,6LAAC,uKAAA,CAAA,UAAU;gBAAC,SAAQ;0BAAK;;;;;;YACxB,SAAS,GAAG,CAAC,CAAC,GAAG,oBAChB,6LAAC,yJAAA,CAAA,UAAG;;sCACF,6LAAC,uKAAA,CAAA,UAAU;4BAAC,YAAY;sCAAE,EAAE,KAAK;;;;;;sCACjC,6LAAC,+JAAA,CAAA,UAAM;4BACL,OAAO,EAAE,KAAK;4BACd,KAAK;4BACL,KAAK;4BACL,MAAM;4BACN,UAAU,CAAC,GAAG,IAAM,aAAa,KAAK;4BACtC,mBAAkB;;;;;;;mBARZ,EAAE,GAAG;;;;;0BAYjB,6LAAC,+JAAA,CAAA,UAAM;gBAAC,SAAQ;gBAAY,OAAM;gBAAU,SAAS;gBAAc,IAAI;oBAAE,WAAW;gBAAW;0BAAG;;;;;;;;;;;;AAKxG;GAlDa;;QAEI,8HAAA,CAAA,iBAAc;;;KAFlB","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///S:/x-factor-main/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { WizardLayout } from \"../components/wizard/WizardLayout\";\nimport { FileUploadStep } from \"../components/wizard/FileUploadStep\";\nimport { useWizardStore } from \"../store/wizardStore\";\nimport { parseFiles } from \"../utils/parseFiles\";\nimport { DataReviewStep } from \"../components/wizard/DataReviewStep\";\nimport { RuleBuilderStep } from \"../components/wizard/RuleBuilderStep\";\nimport { PrioritizationStep } from \"../components/wizard/PrioritizationStep\";\n\nexport default function Home() {\n  const step = useWizardStore((s) => s.step);\n  const setStep = useWizardStore((s) => s.setStep);\n  const setTables = useWizardStore((s) => s.setTables);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFiles = async (files: FileList) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const tables = await parseFiles(files);\n      setTables(tables);\n      setStep(1);\n    } catch {\n      setError(\"Error processing files. Please verify the format.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <WizardLayout activeStep={step}>\n      {step === 0 && (\n        <FileUploadStep onFilesLoaded={handleFiles} />\n      )}\n      {step === 1 && (\n        <DataReviewStep onNext={() => setStep(2)} />\n      )}\n      {step === 2 && (\n        <RuleBuilderStep onNext={() => setStep(3)} />\n      )}\n      {step === 3 && (\n        <PrioritizationStep onExport={() => console.log('Export completed')} />\n      )}\n      {loading && <div>Loading files...</div>}\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n    </WizardLayout>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;;AAUe,SAAS;;IACtB,MAAM,OAAO,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;qCAAE,CAAC,IAAM,EAAE,IAAI;;IACzC,MAAM,UAAU,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;wCAAE,CAAC,IAAM,EAAE,OAAO;;IAC/C,MAAM,YAAY,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;0CAAE,CAAC,IAAM,EAAE,SAAS;;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,cAAc,OAAO;QACzB,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE;YAChC,UAAU;YACV,QAAQ;QACV,EAAE,OAAM;YACN,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC,+IAAA,CAAA,eAAY;QAAC,YAAY;;YACvB,SAAS,mBACR,6LAAC,iJAAA,CAAA,iBAAc;gBAAC,eAAe;;;;;;YAEhC,SAAS,mBACR,6LAAC,iJAAA,CAAA,iBAAc;gBAAC,QAAQ,IAAM,QAAQ;;;;;;YAEvC,SAAS,mBACR,6LAAC,kJAAA,CAAA,kBAAe;gBAAC,QAAQ,IAAM,QAAQ;;;;;;YAExC,SAAS,mBACR,6LAAC,qJAAA,CAAA,qBAAkB;gBAAC,UAAU,IAAM,QAAQ,GAAG,CAAC;;;;;;YAEjD,yBAAW,6LAAC;0BAAI;;;;;;YAChB,uBAAS,6LAAC;gBAAI,OAAO;oBAAE,OAAO;gBAAM;0BAAI;;;;;;;;;;;;AAG/C;GAvCwB;;QACT,8HAAA,CAAA,iBAAc;QACX,8HAAA,CAAA,iBAAc;QACZ,8HAAA,CAAA,iBAAc;;;KAHV","debugId":null}}]
}